#include <cstdio>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

#define forn(i, n) for (int i = 0; i < (int)(n); i++)

typedef long long ll;

const int N = 100, K = 91;

//#include "h.out"
double border[N][K] = {
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{5.74169e+17, 5.33902e+17, 6.08237e+17, -1, -1, -1, 7.8249e+17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{8.38257e+17, 8.97392e+17, 9.61746e+17, 1.05868e+18, 1.13379e+18, 1.16155e+18, 1.17176e+18, 1.29373e+18, 1.32721e+18, 1.2797e+18, 1.30205e+18, 1.40711e+18, 1.367e+18, 1.42068e+18, 1.3661e+18, 1.54018e+18, 1.45727e+18, 1.56808e+18, 1.49448e+18, 1.63773e+18, 1.63529e+18, 1.58805e+18, 1.50259e+18, 1.58716e+18, -1, 1.59713e+18, 1.72663e+18, -1, 1.68094e+18, 1.73981e+18, -1, 1.69161e+18, 1.65041e+18, 1.74423e+18, 1.5851e+18, 1.88296e+18, 1.56048e+18, -1, 1.71842e+18, -1, 1.7655e+18, -1, 1.75209e+18, 1.61429e+18, 1.82899e+18, 1.86609e+18, -1, -1, 1.81158e+18, 1.8038e+18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.83097e+18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{8.72406e+17, 9.27562e+17, 9.86638e+17, 1.03929e+18, 1.09529e+18, 1.15158e+18, 1.17782e+18, 1.20584e+18, 1.25355e+18, 1.28223e+18, 1.29678e+18, 1.34121e+18, 1.36031e+18, 1.4049e+18, 1.40451e+18, 1.47463e+18, 1.48145e+18, 1.4489e+18, 1.50006e+18, 1.49862e+18, 1.50852e+18, 1.54169e+18, 1.57512e+18, 1.55974e+18, 1.55913e+18, 1.60876e+18, 1.5334e+18, 1.58318e+18, 1.63697e+18, 1.63233e+18, 1.61386e+18, 1.60179e+18, 1.69837e+18, 1.6184e+18, 1.65615e+18, 1.6457e+18, 1.69971e+18, 1.71242e+18, 1.66185e+18, 1.69411e+18, 1.72009e+18, 1.77251e+18, 1.71209e+18, 1.73345e+18, 1.7038e+18, 1.66404e+18, 1.76941e+18, 1.72852e+18, 1.74821e+18, 1.79479e+18, 1.78926e+18, 1.77364e+18, 1.76356e+18, 1.87042e+18, 1.73959e+18, 1.83196e+18, 1.77588e+18, 1.78404e+18, 1.67255e+18, 1.8595e+18, 1.64755e+18, 1.77937e+18, 1.74486e+18, 1.8711e+18, 1.75375e+18, 1.76922e+18, 1.86787e+18, 1.86659e+18, 1.77986e+18, 1.8493e+18, 1.72229e+18, -1, 1.70221e+18, 1.85882e+18, 1.84071e+18, 1.87205e+18, -1, 1.86675e+18, 1.91032e+18, -1, -1, 1.83286e+18, 1.83745e+18, 1.8623e+18, 1.84914e+18, -1, 1.82144e+18, 1.88597e+18, 1.88018e+18, -1, 1.73973e+18, },
{8.92456e+17, 9.3501e+17, 9.96866e+17, 1.04215e+18, 1.09174e+18, 1.12349e+18, 1.15649e+18, 1.20286e+18, 1.23422e+18, 1.26835e+18, 1.29191e+18, 1.3228e+18, 1.34279e+18, 1.36534e+18, 1.38275e+18, 1.40038e+18, 1.43194e+18, 1.44133e+18, 1.46704e+18, 1.47611e+18, 1.4904e+18, 1.50374e+18, 1.5133e+18, 1.52555e+18, 1.52396e+18, 1.55732e+18, 1.55878e+18, 1.57713e+18, 1.5689e+18, 1.59955e+18, 1.62201e+18, 1.61218e+18, 1.61647e+18, 1.61928e+18, 1.62215e+18, 1.63094e+18, 1.66744e+18, 1.66159e+18, 1.65417e+18, 1.66557e+18, 1.68593e+18, 1.69764e+18, 1.6873e+18, 1.68735e+18, 1.67559e+18, 1.70839e+18, 1.68293e+18, 1.70073e+18, 1.73178e+18, 1.72052e+18, 1.7232e+18, 1.72894e+18, 1.75983e+18, 1.77233e+18, 1.74959e+18, 1.72699e+18, 1.7517e+18, 1.74426e+18, 1.73589e+18, 1.7575e+18, 1.77631e+18, 1.77099e+18, 1.79416e+18, 1.80461e+18, 1.77299e+18, 1.79637e+18, 1.78191e+18, 1.78559e+18, 1.81063e+18, 1.79296e+18, 1.78576e+18, 1.81223e+18, 1.80002e+18, 1.80322e+18, 1.82952e+18, 1.78644e+18, 1.82576e+18, 1.83409e+18, 1.83927e+18, 1.80836e+18, 1.79218e+18, 1.77177e+18, 1.8754e+18, 1.79456e+18, 1.79739e+18, 1.82322e+18, 1.8483e+18, 1.85082e+18, 1.85518e+18, 1.8406e+18, 1.85472e+18, },
{9.10024e+17, 9.48496e+17, 1.00701e+18, 1.05109e+18, 1.09771e+18, 1.13102e+18, 1.16581e+18, 1.19565e+18, 1.23359e+18, 1.25668e+18, 1.27919e+18, 1.30348e+18, 1.33377e+18, 1.3546e+18, 1.37273e+18, 1.38827e+18, 1.41012e+18, 1.43214e+18, 1.44401e+18, 1.44837e+18, 1.46519e+18, 1.48776e+18, 1.49371e+18, 1.51452e+18, 1.53419e+18, 1.53299e+18, 1.55374e+18, 1.55916e+18, 1.57684e+18, 1.57508e+18, 1.58206e+18, 1.60369e+18, 1.60229e+18, 1.61246e+18, 1.62967e+18, 1.62672e+18, 1.63888e+18, 1.64365e+18, 1.65191e+18, 1.65239e+18, 1.66222e+18, 1.66877e+18, 1.67418e+18, 1.67539e+18, 1.68544e+18, 1.68185e+18, 1.6992e+18, 1.68621e+18, 1.70554e+18, 1.69977e+18, 1.71848e+18, 1.71298e+18, 1.71933e+18, 1.72927e+18, 1.71673e+18, 1.73341e+18, 1.73847e+18, 1.74206e+18, 1.74198e+18, 1.74692e+18, 1.75575e+18, 1.77697e+18, 1.76055e+18, 1.76285e+18, 1.76394e+18, 1.75762e+18, 1.76536e+18, 1.76112e+18, 1.78049e+18, 1.77777e+18, 1.78157e+18, 1.78216e+18, 1.79086e+18, 1.79424e+18, 1.79691e+18, 1.79141e+18, 1.78928e+18, 1.79927e+18, 1.79696e+18, 1.79485e+18, 1.80791e+18, 1.79833e+18, 1.81023e+18, 1.79972e+18, 1.79737e+18, 1.80309e+18, 1.81192e+18, 1.81812e+18, 1.80853e+18, 1.82199e+18, 1.82395e+18, },
{9.20218e+17, 9.50306e+17, 1.0084e+18, 1.06104e+18, 1.08954e+18, 1.13381e+18, 1.16472e+18, 1.19474e+18, 1.21881e+18, 1.25216e+18, 1.27611e+18, 1.30184e+18, 1.31639e+18, 1.34315e+18, 1.36018e+18, 1.37475e+18, 1.3962e+18, 1.41408e+18, 1.42883e+18, 1.4487e+18, 1.45502e+18, 1.47382e+18, 1.4841e+18, 1.49688e+18, 1.50851e+18, 1.52187e+18, 1.53421e+18, 1.5452e+18, 1.55831e+18, 1.55666e+18, 1.57206e+18, 1.58076e+18, 1.59633e+18, 1.59417e+18, 1.60154e+18, 1.60611e+18, 1.62306e+18, 1.62376e+18, 1.62629e+18, 1.64492e+18, 1.64986e+18, 1.64662e+18, 1.65461e+18, 1.65947e+18, 1.67404e+18, 1.6784e+18, 1.67827e+18, 1.68896e+18, 1.69208e+18, 1.68731e+18, 1.69836e+18, 1.6984e+18, 1.70664e+18, 1.71021e+18, 1.71375e+18, 1.71786e+18, 1.7155e+18, 1.72908e+18, 1.72679e+18, 1.72904e+18, 1.74032e+18, 1.73782e+18, 1.74328e+18, 1.74517e+18, 1.75109e+18, 1.75131e+18, 1.76009e+18, 1.7548e+18, 1.76284e+18, 1.76661e+18, 1.76269e+18, 1.77077e+18, 1.77259e+18, 1.77175e+18, 1.77265e+18, 1.77463e+18, 1.78032e+18, 1.78525e+18, 1.78592e+18, 1.78883e+18, 1.78693e+18, 1.79559e+18, 1.7919e+18, 1.79789e+18, 1.79983e+18, 1.79669e+18, 1.7978e+18, 1.80523e+18, 1.80014e+18, 1.81031e+18, 1.80792e+18, },
{8.84485e+17, 9.59854e+17, 1.00121e+18, 1.06667e+18, 1.10492e+18, 1.1445e+18, 1.14517e+18, 1.18155e+18, 1.22954e+18, 1.24971e+18, 1.26472e+18, 1.28995e+18, 1.31022e+18, 1.33378e+18, 1.35391e+18, 1.37319e+18, 1.38802e+18, 1.40435e+18, 1.42076e+18, 1.43226e+18, 1.44938e+18, 1.4603e+18, 1.47443e+18, 1.48734e+18, 1.49862e+18, 1.5051e+18, 1.51793e+18, 1.53325e+18, 1.5416e+18, 1.55392e+18, 1.55545e+18, 1.56793e+18, 1.5756e+18, 1.5874e+18, 1.59013e+18, 1.60241e+18, 1.60539e+18, 1.61711e+18, 1.61672e+18, 1.62455e+18, 1.63042e+18, 1.63575e+18, 1.64623e+18, 1.64576e+18, 1.65727e+18, 1.65764e+18, 1.6661e+18, 1.67262e+18, 1.67514e+18, 1.67904e+18, 1.68322e+18, 1.68827e+18, 1.69215e+18, 1.70029e+18, 1.70131e+18, 1.71428e+18, 1.7093e+18, 1.71732e+18, 1.71564e+18, 1.72235e+18, 1.72819e+18, 1.72886e+18, 1.73113e+18, 1.73235e+18, 1.73851e+18, 1.74312e+18, 1.74441e+18, 1.74961e+18, 1.75124e+18, 1.75344e+18, 1.75565e+18, 1.75973e+18, 1.76429e+18, 1.76737e+18, 1.76414e+18, 1.76949e+18, 1.77251e+18, 1.77412e+18, 1.7757e+18, 1.77775e+18, 1.78386e+18, 1.78283e+18, 1.78038e+18, 1.78268e+18, 1.79383e+18, 1.79441e+18, 1.79225e+18, 1.79878e+18, 1.79688e+18, 1.80446e+18, 1.80049e+18, },
{9.09323e+17, 1.02468e+18, 1.01766e+18, 1.0457e+18, 1.13225e+18, 1.15153e+18, 1.15663e+18, 1.19989e+18, 1.20276e+18, 1.2453e+18, 1.2699e+18, 1.29315e+18, 1.3107e+18, 1.33193e+18, 1.35227e+18, 1.36782e+18, 1.38239e+18, 1.40389e+18, 1.41063e+18, 1.43109e+18, 1.44099e+18, 1.44838e+18, 1.46082e+18, 1.48211e+18, 1.49508e+18, 1.49815e+18, 1.50826e+18, 1.52015e+18, 1.52725e+18, 1.54513e+18, 1.54746e+18, 1.55615e+18, 1.56885e+18, 1.57274e+18, 1.58562e+18, 1.58762e+18, 1.60008e+18, 1.6015e+18, 1.60922e+18, 1.6106e+18, 1.62319e+18, 1.62702e+18, 1.62992e+18, 1.63968e+18, 1.64574e+18, 1.6503e+18, 1.6544e+18, 1.65921e+18, 1.66396e+18, 1.67116e+18, 1.67342e+18, 1.67737e+18, 1.68748e+18, 1.68845e+18, 1.6918e+18, 1.69634e+18, 1.699e+18, 1.70378e+18, 1.70523e+18, 1.71225e+18, 1.71819e+18, 1.71878e+18, 1.71899e+18, 1.7258e+18, 1.72768e+18, 1.72969e+18, 1.73053e+18, 1.73938e+18, 1.73995e+18, 1.74067e+18, 1.74534e+18, 1.75019e+18, 1.75751e+18, 1.75247e+18, 1.75417e+18, 1.75837e+18, 1.76093e+18, 1.76237e+18, 1.76446e+18, 1.7696e+18, 1.76776e+18, 1.77363e+18, 1.77704e+18, 1.7792e+18, 1.7784e+18, 1.78561e+18, 1.78434e+18, 1.78582e+18, 1.78488e+18, 1.78892e+18, 1.79111e+18, },
{-1, -1, 1.31859e+18, 1.10223e+18, 1.11767e+18, 1.10219e+18, 1.18373e+18, 1.20352e+18, 1.20337e+18, 1.24863e+18, 1.26009e+18, 1.26505e+18, 1.32152e+18, 1.32491e+18, 1.34136e+18, 1.36255e+18, 1.37727e+18, 1.39261e+18, 1.40858e+18, 1.41888e+18, 1.43848e+18, 1.43789e+18, 1.45048e+18, 1.47701e+18, 1.48072e+18, 1.49321e+18, 1.50134e+18, 1.51174e+18, 1.52492e+18, 1.53096e+18, 1.54419e+18, 1.54384e+18, 1.55468e+18, 1.56367e+18, 1.57591e+18, 1.58136e+18, 1.5804e+18, 1.5901e+18, 1.59806e+18, 1.60709e+18, 1.60535e+18, 1.62089e+18, 1.62792e+18, 1.62727e+18, 1.63391e+18, 1.63895e+18, 1.64608e+18, 1.64615e+18, 1.65471e+18, 1.65898e+18, 1.66649e+18, 1.67278e+18, 1.67246e+18, 1.67574e+18, 1.68378e+18, 1.6896e+18, 1.69058e+18, 1.69645e+18, 1.69675e+18, 1.70179e+18, 1.7072e+18, 1.70766e+18, 1.71056e+18, 1.71609e+18, 1.72278e+18, 1.72196e+18, 1.72391e+18, 1.72963e+18, 1.732e+18, 1.73248e+18, 1.73988e+18, 1.74385e+18, 1.74195e+18, 1.74521e+18, 1.75016e+18, 1.74964e+18, 1.7538e+18, 1.75793e+18, 1.75539e+18, 1.76168e+18, 1.76221e+18, 1.767e+18, 1.76792e+18, 1.76843e+18, 1.77302e+18, 1.77122e+18, 1.77263e+18, 1.77576e+18, 1.77914e+18, 1.78101e+18, 1.78827e+18, },
{-1, -1, -1, -1, 7.55023e+17, 1.46206e+18, 1.36406e+18, 1.27059e+18, 1.17688e+18, 1.3064e+18, 1.24399e+18, 1.32699e+18, 1.32277e+18, 1.3064e+18, 1.35199e+18, 1.34499e+18, 1.36214e+18, 1.37987e+18, 1.39669e+18, 1.40507e+18, 1.41954e+18, 1.42566e+18, 1.4548e+18, 1.46888e+18, 1.47662e+18, 1.48864e+18, 1.49015e+18, 1.50579e+18, 1.51316e+18, 1.51772e+18, 1.53082e+18, 1.53945e+18, 1.54558e+18, 1.54721e+18, 1.55725e+18, 1.56887e+18, 1.5756e+18, 1.58487e+18, 1.59186e+18, 1.59514e+18, 1.60303e+18, 1.61025e+18, 1.61419e+18, 1.61922e+18, 1.63192e+18, 1.62926e+18, 1.63911e+18, 1.64156e+18, 1.64351e+18, 1.65112e+18, 1.65683e+18, 1.65874e+18, 1.66275e+18, 1.67e+18, 1.67345e+18, 1.67636e+18, 1.68327e+18, 1.68602e+18, 1.68826e+18, 1.69428e+18, 1.69652e+18, 1.70186e+18, 1.70377e+18, 1.70949e+18, 1.71204e+18, 1.7137e+18, 1.7143e+18, 1.72029e+18, 1.72281e+18, 1.72498e+18, 1.72648e+18, 1.73302e+18, 1.73362e+18, 1.73877e+18, 1.74215e+18, 1.74445e+18, 1.74532e+18, 1.74515e+18, 1.74746e+18, 1.75177e+18, 1.75399e+18, 1.75824e+18, 1.75824e+18, 1.76023e+18, 1.76378e+18, 1.76416e+18, 1.76874e+18, 1.77117e+18, 1.77248e+18, 1.77229e+18, 1.77638e+18, },
{-1, -1, -1, -1, -1, 1.13942e+18, -1, 1.35632e+18, -1, 1.36504e+18, 1.23849e+18, 1.16837e+18, 1.16139e+18, 1.44334e+18, 1.28815e+18, 1.30822e+18, 1.34278e+18, 1.40211e+18, 1.38738e+18, 1.44295e+18, 1.46796e+18, 1.44631e+18, 1.45586e+18, 1.4487e+18, 1.45577e+18, 1.47283e+18, 1.48732e+18, 1.49017e+18, 1.5143e+18, 1.52591e+18, 1.52499e+18, 1.52443e+18, 1.54218e+18, 1.54767e+18, 1.55816e+18, 1.57249e+18, 1.57353e+18, 1.57891e+18, 1.58661e+18, 1.60399e+18, 1.5943e+18, 1.59873e+18, 1.606e+18, 1.60969e+18, 1.61458e+18, 1.6216e+18, 1.63034e+18, 1.63079e+18, 1.63215e+18, 1.64294e+18, 1.64993e+18, 1.64812e+18, 1.65572e+18, 1.66394e+18, 1.6615e+18, 1.66912e+18, 1.66938e+18, 1.68021e+18, 1.6823e+18, 1.68658e+18, 1.68881e+18, 1.69279e+18, 1.6935e+18, 1.70074e+18, 1.70318e+18, 1.70396e+18, 1.70854e+18, 1.71083e+18, 1.71786e+18, 1.71817e+18, 1.7213e+18, 1.72076e+18, 1.72703e+18, 1.72987e+18, 1.73195e+18, 1.73327e+18, 1.73587e+18, 1.73861e+18, 1.7435e+18, 1.74451e+18, 1.74685e+18, 1.7531e+18, 1.75321e+18, 1.75244e+18, 1.75744e+18, 1.75711e+18, 1.75924e+18, 1.76416e+18, 1.76273e+18, 1.76956e+18, 1.7684e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.26408e+18, 1.38307e+18, 1.37559e+18, 1.37811e+18, 1.43186e+18, 1.5444e+18, 1.42635e+18, 1.45881e+18, 1.44074e+18, 1.45429e+18, 1.51201e+18, 1.43955e+18, 1.461e+18, 1.4785e+18, 1.49406e+18, 1.51607e+18, 1.54334e+18, 1.51249e+18, 1.55341e+18, 1.55024e+18, 1.54723e+18, 1.52601e+18, 1.55378e+18, 1.56569e+18, 1.56299e+18, 1.58163e+18, 1.5816e+18, 1.59444e+18, 1.58907e+18, 1.59776e+18, 1.59975e+18, 1.61038e+18, 1.6132e+18, 1.62228e+18, 1.61643e+18, 1.6284e+18, 1.63444e+18, 1.63936e+18, 1.64632e+18, 1.64422e+18, 1.64869e+18, 1.65552e+18, 1.66043e+18, 1.67386e+18, 1.67335e+18, 1.67152e+18, 1.67451e+18, 1.6836e+18, 1.68847e+18, 1.68859e+18, 1.69888e+18, 1.69663e+18, 1.69971e+18, 1.70151e+18, 1.70623e+18, 1.71107e+18, 1.71176e+18, 1.72049e+18, 1.71614e+18, 1.72034e+18, 1.71931e+18, 1.72722e+18, 1.7261e+18, 1.7289e+18, 1.73243e+18, 1.73548e+18, 1.73861e+18, 1.73905e+18, 1.73954e+18, 1.74226e+18, 1.74358e+18, 1.74761e+18, 1.75341e+18, 1.75086e+18, 1.76037e+18, 1.75663e+18, 1.76068e+18, 1.76176e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.248e+18, -1, 1.36689e+18, 1.54914e+18, 1.42175e+18, 1.47227e+18, 1.49243e+18, 1.48931e+18, 1.43464e+18, 1.39385e+18, 1.51151e+18, 1.53078e+18, 1.5119e+18, 1.55771e+18, 1.52765e+18, 1.55983e+18, 1.53431e+18, 1.50849e+18, 1.52276e+18, 1.53322e+18, 1.58999e+18, 1.56824e+18, 1.57606e+18, 1.56967e+18, 1.62043e+18, 1.60446e+18, 1.58735e+18, 1.60209e+18, 1.60588e+18, 1.59503e+18, 1.61728e+18, 1.62069e+18, 1.62981e+18, 1.62309e+18, 1.62538e+18, 1.63667e+18, 1.63967e+18, 1.65221e+18, 1.66419e+18, 1.64695e+18, 1.64994e+18, 1.67549e+18, 1.66096e+18, 1.67308e+18, 1.67998e+18, 1.68359e+18, 1.67995e+18, 1.68833e+18, 1.68624e+18, 1.68579e+18, 1.6871e+18, 1.69836e+18, 1.70386e+18, 1.69869e+18, 1.70691e+18, 1.71677e+18, 1.71598e+18, 1.71656e+18, 1.72109e+18, 1.72639e+18, 1.72656e+18, 1.7288e+18, 1.72713e+18, 1.73278e+18, 1.73088e+18, 1.74029e+18, 1.73888e+18, 1.74101e+18, 1.74371e+18, 1.74051e+18, 1.75043e+18, 1.74368e+18, 1.75432e+18, 1.75432e+18, 1.75737e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.37417e+18, -1, -1, 1.40449e+18, 1.43284e+18, 1.4302e+18, 1.69382e+18, 1.40377e+18, 1.51284e+18, 1.71781e+18, 1.47363e+18, 1.45066e+18, 1.51066e+18, 1.43841e+18, 1.50621e+18, 1.46384e+18, 1.52839e+18, 1.4607e+18, 1.5812e+18, 1.55677e+18, 1.65584e+18, 1.49664e+18, 1.57554e+18, 1.60105e+18, 1.61029e+18, 1.58738e+18, 1.62241e+18, 1.57154e+18, 1.61133e+18, 1.64809e+18, 1.61548e+18, 1.63602e+18, 1.61319e+18, 1.63794e+18, 1.6393e+18, 1.64058e+18, 1.67621e+18, 1.6441e+18, 1.65606e+18, 1.65391e+18, 1.67415e+18, 1.67262e+18, 1.69363e+18, 1.68088e+18, 1.68151e+18, 1.68609e+18, 1.68519e+18, 1.68974e+18, 1.70612e+18, 1.69735e+18, 1.70665e+18, 1.71267e+18, 1.70246e+18, 1.71636e+18, 1.71483e+18, 1.70808e+18, 1.71282e+18, 1.72008e+18, 1.72041e+18, 1.71896e+18, 1.72976e+18, 1.72463e+18, 1.73567e+18, 1.72883e+18, 1.73532e+18, 1.7414e+18, 1.74018e+18, 1.74404e+18, 1.74173e+18, 1.7459e+18, 1.75423e+18, 1.7555e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.58655e+18, -1, 1.46003e+18, 1.48155e+18, 1.466e+18, 1.5556e+18, -1, 1.64787e+18, 1.52048e+18, 1.70429e+18, 1.58356e+18, 1.58876e+18, 1.69502e+18, 1.53865e+18, 1.57827e+18, 1.62381e+18, 1.62784e+18, 1.56768e+18, 1.60816e+18, 1.55459e+18, 1.67862e+18, 1.67234e+18, 1.61401e+18, 1.66346e+18, 1.56707e+18, 1.61199e+18, 1.62675e+18, 1.62443e+18, 1.63811e+18, 1.66891e+18, 1.65767e+18, 1.65012e+18, 1.66202e+18, 1.68968e+18, 1.675e+18, 1.68367e+18, 1.68915e+18, 1.65816e+18, 1.67322e+18, 1.6958e+18, 1.69187e+18, 1.66716e+18, 1.6996e+18, 1.68081e+18, 1.72316e+18, 1.68488e+18, 1.71422e+18, 1.72667e+18, 1.71935e+18, 1.72374e+18, 1.73984e+18, 1.72524e+18, 1.71046e+18, 1.72815e+18, 1.74046e+18, 1.73046e+18, 1.73438e+18, 1.73666e+18, 1.72618e+18, 1.73407e+18, 1.73062e+18, 1.74448e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.20038e+18, -1, -1, 1.44289e+18, -1, -1, 1.71511e+18, -1, -1, 1.77849e+18, 1.57043e+18, 1.71905e+18, -1, -1, 1.6179e+18, 1.51433e+18, -1, 1.64066e+18, 1.67651e+18, 1.68029e+18, 1.70641e+18, 1.74142e+18, 1.71253e+18, 1.69705e+18, 1.70844e+18, 1.6356e+18, 1.6328e+18, 1.65769e+18, 1.66886e+18, 1.68051e+18, 1.70077e+18, 1.63117e+18, 1.62271e+18, 1.64617e+18, 1.70862e+18, 1.68943e+18, 1.62768e+18, 1.68156e+18, 1.72127e+18, 1.65762e+18, 1.68159e+18, 1.70881e+18, 1.69839e+18, 1.68307e+18, 1.69353e+18, 1.70786e+18, 1.7063e+18, 1.73096e+18, 1.70489e+18, 1.71584e+18, 1.73279e+18, 1.71951e+18, 1.71926e+18, 1.72396e+18, 1.73118e+18, 1.71243e+18, 1.74141e+18, 1.72996e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.54436e+18, 1.72916e+18, -1, -1, -1, -1, 1.53786e+18, 1.72231e+18, -1, -1, -1, 1.71088e+18, 1.63746e+18, -1, -1, 1.74575e+18, 1.77195e+18, 1.72303e+18, 1.67747e+18, -1, 1.7001e+18, 1.76722e+18, 1.63392e+18, -1, 1.70311e+18, 1.68521e+18, 1.77059e+18, 1.75019e+18, 1.54865e+18, 1.69285e+18, 1.68658e+18, 1.69497e+18, 1.7296e+18, 1.6554e+18, 1.72751e+18, 1.72911e+18, 1.75259e+18, 1.73001e+18, 1.72554e+18, 1.69377e+18, 1.70935e+18, 1.77585e+18, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.64713e+18, 1.71125e+18, -1, -1, -1, -1, -1, 1.59102e+18, 1.77713e+18, -1, -1, -1, -1, -1, -1, 1.71702e+18, -1, -1, -1, 1.62732e+18, 1.59018e+18, 1.69107e+18, 1.62197e+18, 1.81844e+18, 1.72473e+18, 1.76546e+18, 1.75826e+18, -1, 1.72749e+18, 1.68718e+18, 1.76797e+18, 1.77877e+18, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1.72995e+18, -1, -1, -1, -1, 1.64367e+18, -1, -1, -1, -1, 1.75973e+18, 1.66544e+18, -1, -1, -1, -1, 1.70343e+18, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
};

int main() {
  //freopen("unrumpf.in", "r", stdin);
  //FILE *f = fopen("unrumpf.ans", "r");
  int tn;
  //printf("%g\n", log(2));
  scanf("%d", &tn);
  double diff = 0;
  forn(i, N) {
    int l = K, r = 0;
    forn(j, K) {
      if (border[i][j] != -1) {
        l = min(l, j);
        r = max(r, j);
      }
    }
    if (l <= r) {
      for (int j = l; j <= r; j++)
        if (border[i][j] == -1) 
          border[i][j] = border[i][j - 1];
    }
  }
  forn(_, tn) {
    int n;
    scanf("%d", &n);
    int x[n], y[n];
    forn(i, n) scanf("%d%d", &x[i], &y[i]);
    double p = 0;
    long long s = 0;
    forn(i, n) {
      int j = (i + 1) % n;
      ll dx = x[j] - x[i];
      ll dy = y[j] - y[i];
      p += sqrt(dx * dx + dy * dy);
      s += (ll)x[j] * y[i] - (ll)x[i] * y[j];
    }
    s = abs<long long>(s);
    int ans;
    //fscanf(f, "%d", &ans);
    double *b = border[n - 1];
    double sum_w = 0, sum_value = 0;
    int mi = 0;
    forn(i, K)
      if (fabs(b[i] - s) < fabs(b[mi] - s))
        mi = i;
    if (b[mi] == -1)
      mi = (n < 10 ? 10 : 100);
    else
      mi = min(mi + 10, 100);
/*
    forn(i, K)
      if (b[i] != -1) {
        double z = max(b[i] / s, s / b[i]) - 1;
        double w = exp(-z * 3);
        sum_w += w;
        sum_value += w * i;
      }
    if (sum_w == 0)
      mi = (n < 10 ? 10 : 100);
    else
      mi = max(10, min((int)round(sum_value / sum_w), 100));
*/
    printf("%d\n", mi);
//    diff += fabs(log(ans) - log(mi));
  }
//  printf("diff = %.5f\n", diff / tn);
}

